services:
  web:
    image: ${DOCKER_HUB_REPO}:latest
    command: python run.py
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_DEBUG=${FLASK_DEBUG}
      - FLASK_APP=run.py
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
      - broker_url=${broker_url}
      - result_backend=${result_backend}
      - REDIS_URL=${REDIS_URL}
    user: appuser
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-network

  celery:
    image: ${DOCKER_HUB_REPO}:latest
    command: celery -A app.celery worker --loglevel=info
    env_file:
      - .env
    environment:
      - FLASK_ENV=${FLASK_ENV}
      - SQLALCHEMY_DATABASE_URI=${SQLALCHEMY_DATABASE_URI}
      - broker_url=${broker_url}
      - result_backend=${result_backend}
      - REDIS_URL=${REDIS_URL}
    user: appuser
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_started
    networks:
      - app-network

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7.4.2
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    deploy:
      resources:
        limits:
          memory: 512m
        reservations:
          memory: 256m
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge