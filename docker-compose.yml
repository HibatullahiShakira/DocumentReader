services:
  api:
    image: ${DOCKER_HUB_REPO}:latest
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    command: ["python", "run.py"]

  worker:
    image: ${DOCKER_HUB_REPO}:latest
    volumes:
      - ./uploads:/app/uploads
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    command: ["python", "-m", "app.worker"]

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  test-db:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: documentreader_test
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d documentreader_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  test:
    image: ${DOCKER_HUB_REPO}:latest
    depends_on:
      redis:
        condition: service_started
      test-db:
        condition: service_healthy
    environment:
      - FLASK_ENV=testing
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@test-db:5432/documentreader_test
    env_file:
      - .env
    volumes:
      - ./tests:/app/tests
      - ./test_uploads:/app/test_uploads
    command: ["python", "-m", "unittest", "discover", "-s", "tests", "-v"]